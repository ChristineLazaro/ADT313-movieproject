{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Casts.css'; // Create this file for custom styling if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Casts = () => {\n  _s();\n  const [castList, setCastList] = useState([]);\n  const {\n    movieId\n  } = useParams();\n  useEffect(() => {\n    if (movieId) {\n      axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw' // Replace with your token if needed\n        }\n      }).then(response => {\n        setCastList(response.data.cast);\n        console.log(response.data.cast);\n      }).catch(error => {\n        console.error(\"Error fetching cast data:\", error);\n        alert(\"An error occurred while fetching the cast data.\");\n      });\n    }\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cast-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cast List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), castList.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cast-list\",\n      children: castList.map(cast => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cast-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${cast.profile_path}`,\n          alt: cast.name,\n          onError: e => e.target.src = '/default-profile.png' // Fallback if image is not available\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 20\n            }, this), \" \", cast.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Character:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 20\n            }, this), \" \", cast.character]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, cast.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cast information available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Casts, \"h6vfbWnpOim2fi+4BG7a9DEmZ/M=\", false, function () {\n  return [useParams];\n});\n_c = Casts;\nexport default Casts;\nvar _c;\n$RefreshReg$(_c, \"Casts\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","jsxDEV","_jsxDEV","Casts","_s","castList","setCastList","movieId","method","url","headers","Accept","Authorization","then","response","data","cast","console","log","catch","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","profile_path","alt","name","onError","e","target","character","id","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Form.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Casts.css'; // Create this file for custom styling if needed\r\n\r\nconst Casts = () => {\r\n  const [castList, setCastList] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      axios({\r\n        method: 'get',\r\n        url: `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\r\n        headers: {\r\n          Accept: 'application/json',\r\n          Authorization:\r\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw', // Replace with your token if needed\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setCastList(response.data.cast);\r\n          console.log(response.data.cast);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching cast data:\", error);\r\n          alert(\"An error occurred while fetching the cast data.\");\r\n        });\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className=\"cast-container\">\r\n      <h2>Cast List</h2>\r\n      {castList.length > 0 ? (\r\n        <ul className=\"cast-list\">\r\n          {castList.map((cast) => (\r\n            <li key={cast.id} className=\"cast-item\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\r\n                alt={cast.name}\r\n                onError={(e) => (e.target.src = '/default-profile.png')} // Fallback if image is not available\r\n              />\r\n              <div className=\"cast-info\">\r\n                <p><strong>Name:</strong> {cast.name}</p>\r\n                <p><strong>Character:</strong> {cast.character}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No cast information available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Casts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
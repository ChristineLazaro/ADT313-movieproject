{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    tmdbId\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  const [importedVideos, setImportedVideos] = useState([]);\n  const [formState, setFormState] = useState({\n    mode: 'base',\n    video: {}\n  });\n  const [data, setData] = useState({\n    url: '',\n    name: '',\n    site: '',\n    videoKey: '',\n    videoType: '',\n    official: 0\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const accessToken = localStorage.getItem('accessToken');\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  // Fetch existing videos from the backend\n  useEffect(() => {\n    axios.get(`/videos`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos(response.data);\n      console.log(response.data);\n    });\n  }, [accessToken]);\n\n  // Handle form input changes\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (formState.mode === 'add') {\n      setData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setFormState(prev => ({\n        ...prev,\n        video: {\n          ...prev.video,\n          [name]: value\n        }\n      }));\n    }\n  };\n\n  // Save the new video to the backend\n  const handleSave = () => {\n    const formData = new FormData();\n    formData.append('userId', user.userId);\n    formData.append('movieId', tmdbId);\n    Object.keys(data).forEach(key => formData.append(key, data[key]));\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos([...videos, response.data]);\n      setFormState({\n        mode: 'base',\n        video: {}\n      });\n    });\n  };\n\n  // Update video information in the backend\n  const handleUpdate = () => {\n    const updatedVideo = formState.video;\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos(prev => prev.map(video => video.id === updatedVideo.id ? response.data : video));\n      setFormState({\n        mode: 'base',\n        video: {}\n      });\n    });\n  };\n\n  // Delete a video from the database\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      axios.delete(`/videos/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(() => {\n        setVideos(videos.filter(video => video.id !== id));\n      });\n    }\n  };\n\n  // Search for videos on TMDb based on the movie title\n  const handleImportVideos = () => {\n    axios.get(`https://api.themoviedb.org/3/search/movie`, {\n      params: {\n        api_key: '67e39655ab5c0b2be23473d483fb4af4',\n        query: searchQuery\n      }\n    }).then(response => {\n      setImportedVideos(response.data.results);\n    });\n  };\n\n  // Handle adding an imported video to the database\n  const handleAddImportedVideo = video => {\n    const formData = new FormData();\n    formData.append('userId', user.userId);\n    formData.append('movieId', tmdbId);\n    formData.append('url', video.video_url); // Assuming the video URL is available\n    formData.append('name', video.name);\n    formData.append('site', video.site);\n    formData.append('videoKey', video.key);\n    formData.append('videoType', video.type);\n    formData.append('official', 1); // Mark it as official if importing\n\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos([...videos, response.data]);\n    });\n  };\n\n  // Render the video form\n  const renderForm = () => {\n    const currentVideo = formState.mode === 'update' ? formState.video : data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video URL\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            value: currentVideo.url,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: currentVideo.name,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Site\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"site\",\n            value: currentVideo.site,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoKey\",\n            value: currentVideo.videoKey,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Type\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoType\",\n            value: currentVideo.videoType,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Official\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"official\",\n            value: currentVideo.official,\n            onChange: handleOnChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 0,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: formState.mode === 'add' ? handleSave : handleUpdate,\n        children: formState.mode === 'add' ? 'Save' : 'Update'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: formState.mode === 'base' ? 'add' : 'base',\n        video: {}\n      }),\n      children: formState.mode === 'base' ? 'Add Video' : 'Cancel'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: 'import',\n        video: {}\n      }),\n      children: \"Import Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), (formState.mode === 'add' || formState.mode === 'update') && renderForm(), formState.mode === 'import' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a movie\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleImportVideos,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: importedVideos.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddImportedVideo(movie),\n            children: \"Add to My Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), videos.filter(video => video.movieId === parseInt(tmdbId)).map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: video.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.site\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.videoType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), video.url.includes(\"youtube\") && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${video.videoKey}`,\n        title: video.name,\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        className: \"video-iframe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFormState({\n          mode: 'update',\n          video\n        }),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(video.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"vtbxR0Od63CDbgQcqKJARqi0rLE=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Videos","_s","tmdbId","videos","setVideos","importedVideos","setImportedVideos","formState","setFormState","mode","video","data","setData","url","name","site","videoKey","videoType","official","searchQuery","setSearchQuery","accessToken","localStorage","getItem","user","JSON","parse","get","headers","Authorization","then","response","console","log","handleOnChange","e","value","target","prev","handleSave","formData","FormData","append","userId","Object","keys","forEach","key","post","handleUpdate","updatedVideo","patch","id","map","handleDelete","window","confirm","delete","filter","handleImportVideos","params","api_key","query","results","handleAddImportedVideo","video_url","type","renderForm","currentVideo","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","movie","title","movieId","parseInt","includes","width","height","src","frameBorder","allowFullScreen","className","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { tmdbId } = useParams();\r\n  const [videos, setVideos] = useState([]);\r\n  const [importedVideos, setImportedVideos] = useState([]);\r\n  const [formState, setFormState] = useState({ mode: 'base', video: {} });\r\n  const [data, setData] = useState({\r\n    url: '',\r\n    name: '',\r\n    site: '',\r\n    videoKey: '',\r\n    videoType: '',\r\n    official: 0,\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  // Fetch existing videos from the backend\r\n  useEffect(() => {\r\n    axios.get(`/videos`, {\r\n      headers: { Authorization: `Bearer ${accessToken}` }\r\n    }).then(response => {\r\n      setVideos(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [accessToken]);\r\n\r\n  // Handle form input changes\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (formState.mode === 'add') {\r\n      setData((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setFormState((prev) => ({\r\n        ...prev,\r\n        video: { ...prev.video, [name]: value }\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Save the new video to the backend\r\n  const handleSave = () => {\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId);\r\n    formData.append('movieId', tmdbId);\r\n    Object.keys(data).forEach((key) => formData.append(key, data[key]));\r\n\r\n    axios.post('/videos', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      setVideos([...videos, response.data]);\r\n      setFormState({ mode: 'base', video: {} });\r\n    });\r\n  };\r\n\r\n  // Update video information in the backend\r\n  const handleUpdate = () => {\r\n    const updatedVideo = formState.video;\r\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      setVideos((prev) => prev.map(video => video.id === updatedVideo.id ? response.data : video));\r\n      setFormState({ mode: 'base', video: {} });\r\n    });\r\n  };\r\n\r\n  // Delete a video from the database\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this video?')) {\r\n      axios.delete(`/videos/${id}`, {\r\n        headers: { Authorization: `Bearer ${accessToken}` }\r\n      }).then(() => {\r\n        setVideos(videos.filter(video => video.id !== id));\r\n      });\r\n    }\r\n  };\r\n\r\n  // Search for videos on TMDb based on the movie title\r\n  const handleImportVideos = () => {\r\n    axios.get(`https://api.themoviedb.org/3/search/movie`, {\r\n      params: {\r\n        api_key: '67e39655ab5c0b2be23473d483fb4af4',\r\n        query: searchQuery,\r\n      }\r\n    }).then(response => {\r\n      setImportedVideos(response.data.results);\r\n    });\r\n  };\r\n\r\n  // Handle adding an imported video to the database\r\n  const handleAddImportedVideo = (video) => {\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId);\r\n    formData.append('movieId', tmdbId);\r\n    formData.append('url', video.video_url);  // Assuming the video URL is available\r\n    formData.append('name', video.name);\r\n    formData.append('site', video.site);\r\n    formData.append('videoKey', video.key);\r\n    formData.append('videoType', video.type);\r\n    formData.append('official', 1);  // Mark it as official if importing\r\n\r\n    axios.post('/videos', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      setVideos([...videos, response.data]);\r\n    });\r\n  };\r\n\r\n  // Render the video form\r\n  const renderForm = () => {\r\n    const currentVideo = formState.mode === 'update' ? formState.video : data;\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Video URL\r\n            <input type=\"text\" name=\"url\" value={currentVideo.url} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Name\r\n            <input type=\"text\" name=\"name\" value={currentVideo.name} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Site\r\n            <input type=\"text\" name=\"site\" value={currentVideo.site} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Key\r\n            <input type=\"text\" name=\"videoKey\" value={currentVideo.videoKey} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Type\r\n            <input type=\"text\" name=\"videoType\" value={currentVideo.videoType} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Official\r\n            <select name=\"official\" value={currentVideo.official} onChange={handleOnChange}>\r\n              <option value={1}>Yes</option>\r\n              <option value={0}>No</option>\r\n            </select>\r\n          </label>\r\n        </form>\r\n        <button onClick={formState.mode === 'add' ? handleSave : handleUpdate}>\r\n          {formState.mode === 'add' ? 'Save' : 'Update'}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setFormState({ mode: formState.mode === 'base' ? 'add' : 'base', video: {} })}>\r\n        {formState.mode === 'base' ? 'Add Video' : 'Cancel'}\r\n      </button>\r\n      <button onClick={() => setFormState({ mode: 'import', video: {} })}>Import Video</button>\r\n\r\n      {(formState.mode === 'add' || formState.mode === 'update') && renderForm()}\r\n\r\n      {formState.mode === 'import' && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for a movie\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n          <button onClick={handleImportVideos}>Search</button>\r\n          <div>\r\n            {importedVideos.map((movie) => (\r\n              <div key={movie.id}>\r\n                <h2>{movie.title}</h2>\r\n                <button onClick={() => handleAddImportedVideo(movie)}>\r\n                  Add to My Movie\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {videos\r\n        .filter((video) => video.movieId === parseInt(tmdbId))\r\n        .map((video) => (\r\n          <div key={video.id}>\r\n            <h2>{video.name}</h2>\r\n            <p>{video.site}</p>\r\n            <p>{video.videoType}</p>\r\n\r\n            {video.url.includes(\"youtube\") && (\r\n              <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src={`https://www.youtube.com/embed/${video.videoKey}`}\r\n                title={video.name}\r\n                frameBorder=\"0\"\r\n                allowFullScreen\r\n                className=\"video-iframe\"\r\n              ></iframe>\r\n            )}\r\n\r\n            <button onClick={() => setFormState({ mode: 'update', video })}>Edit</button>\r\n            <button onClick={() => handleDelete(video.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
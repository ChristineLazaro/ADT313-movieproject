{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Lists\\\\Lists.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport './Lists.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lists = () => {\n  _s();\n  const accessToken = localStorage.getItem('accessToken');\n  const navigate = useNavigate();\n  const [lists, setLists] = useState([]);\n  const getMovies = () => {\n    //get the movies from the api or database\n    axios.get('/movies').then(response => {\n      setLists(response.data);\n    });\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  const handleDelete = id => {\n    const isConfirm = window.confirm('Are you sure that you want to delete this data?');\n    if (isConfirm) {\n      axios.delete(`/movies/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(() => {\n        //update list by modifying the movie list array\n        const tempLists = [...lists];\n        const index = lists.findIndex(movie => movie.id === id);\n        if (index !== undefined || index !== -1) {\n          tempLists.splice(index, 1);\n          setLists(tempLists);\n        }\n\n        //update list by requesting again to api\n        // getMovies();\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          navigate('/main/movies/form');\n        },\n        children: \"Create new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"movie-lists\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: lists.map(movie => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  navigate('/main/movies/form/' + movie.id);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleDelete(movie.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Lists, \"j3HuqsLyJv2YRRvvNMx4yQrDWFU=\", false, function () {\n  return [useNavigate];\n});\n_c = Lists;\nexport default Lists;\nvar _c;\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["useNavigate","useEffect","useState","axios","jsxDEV","_jsxDEV","Lists","_s","accessToken","localStorage","getItem","navigate","lists","setLists","getMovies","get","then","response","data","handleDelete","id","isConfirm","window","confirm","delete","headers","Authorization","tempLists","index","findIndex","movie","undefined","splice","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","title","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Lists/Lists.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport './Lists.css';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nconst Lists = () => {\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  const navigate = useNavigate();\r\n  const [lists, setLists] = useState([]);\r\n\r\n  const getMovies = () => {\r\n    //get the movies from the api or database\r\n    axios.get('/movies').then((response) => {\r\n      setLists(response.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    const isConfirm = window.confirm(\r\n      'Are you sure that you want to delete this data?'\r\n    );\r\n    if (isConfirm) {\r\n      axios\r\n        .delete(`/movies/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n        .then(() => {\r\n          //update list by modifying the movie list array\r\n          const tempLists = [...lists];\r\n          const index = lists.findIndex((movie) => movie.id === id);\r\n          if (index !== undefined || index !== -1) {\r\n            tempLists.splice(index, 1);\r\n            setLists(tempLists);\r\n          }\r\n\r\n          //update list by requesting again to api\r\n          // getMovies();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='lists-container'>\r\n      <div className='create-container'>\r\n        <button\r\n          type='button'\r\n          onClick={() => {\r\n            navigate('/main/movies/form');\r\n          }}\r\n        >\r\n          Create new\r\n        </button>\r\n      </div>\r\n      <div className='table-container'>\r\n        <table className='movie-lists'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Title</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lists.map((movie) => (\r\n              <tr>\r\n                <td>{movie.id}</td>\r\n                <td>{movie.title}</td>\r\n                <td>\r\n                  <button\r\n                    type='button'\r\n                    onClick={() => {\r\n                      navigate('/main/movies/form/' + movie.id);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button type='button' onClick={() => handleDelete(movie.id)}>\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lists;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Casts\\\\Casts.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Casts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Casts = () => {\n  _s();\n  const [castList, setCastList] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(''); // State for the movie search query\n  const [movieId, setMovieId] = useState(null); // Store selected movie ID from search\n  const [loading, setLoading] = useState(false); // Loading state for better UI experience\n  const [error, setError] = useState(null); // Error state to display in UI\n\n  const {\n    movieId: movieParam\n  } = useParams(); // Movie ID from URL params (for initial page load)\n\n  // Fetch cast for movie ID from URL\n  useEffect(() => {\n    if (movieParam) {\n      fetchCastData(movieParam);\n    }\n  }, [movieParam]);\n\n  // Function to fetch cast based on movie ID\n  const fetchCastData = id => {\n    setLoading(true);\n    setError(null); // Reset error state\n    axios({\n      method: 'get',\n      url: `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw' // Replace with valid token\n      }\n    }).then(response => {\n      setCastList(response.data.cast);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching cast data:\", error.response ? error.response.data : error.message);\n      setError('An error occurred while fetching the cast data.');\n      setLoading(false);\n    });\n  };\n\n  // Function to search for a movie by name and fetch its cast\n  const searchMovie = () => {\n    if (searchQuery.trim() === '') return;\n    setLoading(true);\n    setError(null);\n    axios({\n      method: 'get',\n      url: `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&language=en-US`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer YOUR_ACCESS_TOKEN' // Replace with valid token\n      }\n    }).then(response => {\n      if (response.data.results.length > 0) {\n        const firstMovie = response.data.results[0]; // Take the first movie from the search results\n        setMovieId(firstMovie.id); // Set movie ID to fetch its cast\n        fetchCastData(firstMovie.id); // Fetch cast for the selected movie\n      } else {\n        setError('No movie found with that name.');\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching movie search results:\", error.response ? error.response.data : error.message);\n      setError('An error occurred while searching for the movie.');\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cast-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cast List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search for a movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchMovie,\n        disabled: loading,\n        children: loading ? 'Searching...' : 'Search Movie'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : castList.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cast-list\",\n      children: castList.map(cast => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cast-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${cast.profile_path}`,\n          alt: cast.name,\n          onError: e => e.target.src = '/default-profile.png'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 20\n            }, this), \" \", cast.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Character:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 20\n            }, this), \" \", cast.character]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, cast.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cast information available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Casts, \"KFNdjmCiW2VHcM/Wss4xigKWomc=\", false, function () {\n  return [useParams];\n});\n_c = Casts;\nexport default Casts;\nvar _c;\n$RefreshReg$(_c, \"Casts\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","jsxDEV","_jsxDEV","Casts","_s","castList","setCastList","searchQuery","setSearchQuery","movieId","setMovieId","loading","setLoading","error","setError","movieParam","fetchCastData","id","method","url","headers","Accept","Authorization","then","response","data","cast","catch","console","message","searchMovie","trim","results","length","firstMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","map","src","profile_path","alt","name","onError","character","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Casts/Casts.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Casts.css';\r\n\r\nconst Casts = () => {\r\n  const [castList, setCastList] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(''); // State for the movie search query\r\n  const [movieId, setMovieId] = useState(null); // Store selected movie ID from search\r\n  const [loading, setLoading] = useState(false); // Loading state for better UI experience\r\n  const [error, setError] = useState(null); // Error state to display in UI\r\n\r\n  const { movieId: movieParam } = useParams(); // Movie ID from URL params (for initial page load)\r\n\r\n  // Fetch cast for movie ID from URL\r\n  useEffect(() => {\r\n    if (movieParam) {\r\n      fetchCastData(movieParam);\r\n    }\r\n  }, [movieParam]);\r\n\r\n  // Function to fetch cast based on movie ID\r\n  const fetchCastData = (id) => {\r\n    setLoading(true);\r\n    setError(null); // Reset error state\r\n    axios({\r\n      method: 'get',\r\n      url: `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw', // Replace with valid token\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setCastList(response.data.cast);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching cast data:\", error.response ? error.response.data : error.message);\r\n        setError('An error occurred while fetching the cast data.');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // Function to search for a movie by name and fetch its cast\r\n  const searchMovie = () => {\r\n    if (searchQuery.trim() === '') return;\r\n    setLoading(true);\r\n    setError(null);\r\n    axios({\r\n      method: 'get',\r\n      url: `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&language=en-US`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer YOUR_ACCESS_TOKEN', // Replace with valid token\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.data.results.length > 0) {\r\n          const firstMovie = response.data.results[0]; // Take the first movie from the search results\r\n          setMovieId(firstMovie.id); // Set movie ID to fetch its cast\r\n          fetchCastData(firstMovie.id); // Fetch cast for the selected movie\r\n        } else {\r\n          setError('No movie found with that name.');\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching movie search results:\", error.response ? error.response.data : error.message);\r\n        setError('An error occurred while searching for the movie.');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cast-container\">\r\n      <h2>Cast List</h2>\r\n\r\n      {/* Search Movie Section */}\r\n      <div className=\"search-section\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          placeholder=\"Search for a movie\"\r\n        />\r\n        <button onClick={searchMovie} disabled={loading}>\r\n          {loading ? 'Searching...' : 'Search Movie'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Display error message if there's any */}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {/* Show cast list or loading indicator */}\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : castList.length > 0 ? (\r\n        <ul className=\"cast-list\">\r\n          {castList.map((cast) => (\r\n            <li key={cast.id} className=\"cast-item\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\r\n                alt={cast.name}\r\n                onError={(e) => (e.target.src = '/default-profile.png')}\r\n              />\r\n              <div className=\"cast-info\">\r\n                <p><strong>Name:</strong> {cast.name}</p>\r\n                <p><strong>Character:</strong> {cast.character}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No cast information available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Casts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    tmdbId\n  } = useParams();\n  const [videoInfo, setVideoInfo] = useState([]);\n  const [formState, setFormState] = useState({\n    mode: \"base\",\n    video: {}\n  });\n  const [data, setData] = useState({\n    url: '',\n    title: '',\n    description: ''\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [importedVideos, setImportedVideos] = useState([]);\n\n  // Get the access token and user from localStorage\n  const accessToken = localStorage.getItem(\"accessToken\");\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  // Check if the user is logged in\n  if (!accessToken || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User is not logged in. Please log in first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  useEffect(() => {\n    axios.get('/videos', {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideoInfo(response.data);\n    }).catch(error => console.error(\"Error fetching videos:\", error));\n  }, [accessToken]);\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (formState.mode === \"add\") {\n      setData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setFormState(prev => ({\n        ...prev,\n        video: {\n          ...prev.video,\n          [name]: value\n        }\n      }));\n    }\n  };\n  const handleSave = () => {\n    const formData = new FormData();\n    formData.append('userId', user.userId); // Use userId from the logged-in user\n    formData.append('movieId', tmdbId);\n    Object.keys(data).forEach(key => formData.append(key, data[key]));\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideoInfo([...videoInfo, response.data]);\n      setFormState({\n        mode: \"base\",\n        video: {}\n      });\n    }).catch(error => console.error(\"Error saving video:\", error));\n  };\n  const handleUpdate = () => {\n    const updatedVideo = formState.video;\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideoInfo(prev => prev.map(video => video.id === updatedVideo.id ? response.data : video));\n      setFormState({\n        mode: \"base\",\n        video: {}\n      });\n    }).catch(error => console.error(\"Error updating video:\", error));\n  };\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      axios.delete(`/videos/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(() => {\n        setVideoInfo(videoInfo.filter(video => video.id !== id));\n      }).catch(error => console.error(\"Error deleting video:\", error));\n    }\n  };\n  const handleImportVideos = async () => {\n    if (!searchQuery) {\n      alert(\"Please enter a movie name.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=67e39655ab5c0b2be23473d483fb4af4&query=${searchQuery}`);\n      const movie = response.data.results[0];\n      if (!movie) {\n        alert(\"No movie found with that name.\");\n        return;\n      }\n      const videoResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=67e39655ab5c0b2be23473d483fb4af4`);\n      setImportedVideos(videoResponse.data.results);\n    } catch (error) {\n      console.error(\"Error fetching video data from TMDb:\", error);\n      alert(\"Error fetching video data.\");\n    }\n  };\n  const handleAddImportedVideo = video => {\n    const formData = new FormData();\n    formData.append('userId', user.userId); // Use userId from the logged-in user\n    formData.append('movieId', tmdbId);\n    formData.append('url', `https://www.youtube.com/watch?v=${video.key}`);\n    formData.append('title', video.name);\n    formData.append('description', video.description || \"No description available\");\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideoInfo([...videoInfo, response.data]);\n      setImportedVideos([]);\n    }).catch(error => console.error(\"Error adding imported video:\", error));\n  };\n  const renderForm = () => {\n    const currentVideo = formState.mode === \"update\" ? formState.video : data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video URL\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            value: currentVideo.url,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: currentVideo.title,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: currentVideo.description,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: formState.mode === \"add\" ? handleSave : handleUpdate,\n        children: formState.mode === \"add\" ? \"Save\" : \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: formState.mode === \"base\" ? \"add\" : \"base\",\n        video: {}\n      }),\n      children: formState.mode === \"base\" ? \"Add Video\" : \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImportVideos,\n      children: \"Import Videos from TMDb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a movie\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), (formState.mode === \"add\" || formState.mode === \"update\") && renderForm(), importedVideos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Imported Videos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: importedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: video.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddImportedVideo(video),\n            children: \"Add to My Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: videoInfo.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFormState({\n            mode: \"update\",\n            video\n          }),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(video.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"61IgPMfWFoU6mC9/Y1Dvkqnxqg0=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Videos","_s","tmdbId","videoInfo","setVideoInfo","formState","setFormState","mode","video","data","setData","url","title","description","searchQuery","setSearchQuery","importedVideos","setImportedVideos","accessToken","localStorage","getItem","user","JSON","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","get","headers","Authorization","then","response","catch","error","console","handleOnChange","e","name","value","target","prev","handleSave","formData","FormData","append","userId","Object","keys","forEach","key","post","handleUpdate","updatedVideo","patch","id","map","handleDelete","window","confirm","delete","filter","handleImportVideos","alert","movie","results","videoResponse","handleAddImportedVideo","renderForm","currentVideo","type","onChange","onClick","placeholder","length","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { tmdbId } = useParams();\r\n  const [videoInfo, setVideoInfo] = useState([]);\r\n  const [formState, setFormState] = useState({ mode: \"base\", video: {} });\r\n  const [data, setData] = useState({\r\n    url: '',\r\n    title: '',\r\n    description: '',\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [importedVideos, setImportedVideos] = useState([]);\r\n  \r\n  // Get the access token and user from localStorage\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  // Check if the user is logged in\r\n  if (!accessToken || !user) {\r\n    return <div>User is not logged in. Please log in first.</div>;\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/videos', {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((response) => {\r\n        setVideoInfo(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching videos:\", error));\r\n  }, [accessToken]);\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (formState.mode === \"add\") {\r\n      setData((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setFormState((prev) => ({\r\n        ...prev,\r\n        video: { ...prev.video, [name]: value },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId); // Use userId from the logged-in user\r\n    formData.append('movieId', tmdbId);\r\n    Object.keys(data).forEach((key) => formData.append(key, data[key]));\r\n\r\n    axios\r\n      .post('/videos', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((response) => {\r\n        setVideoInfo([...videoInfo, response.data]);\r\n        setFormState({ mode: \"base\", video: {} });\r\n      })\r\n      .catch((error) => console.error(\"Error saving video:\", error));\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    const updatedVideo = formState.video;\r\n    axios\r\n      .patch(`/videos/${updatedVideo.id}`, updatedVideo, {\r\n        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((response) => {\r\n        setVideoInfo((prev) =>\r\n          prev.map((video) => (video.id === updatedVideo.id ? response.data : video))\r\n        );\r\n        setFormState({ mode: \"base\", video: {} });\r\n      })\r\n      .catch((error) => console.error(\"Error updating video:\", error));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this video?')) {\r\n      axios\r\n        .delete(`/videos/${id}`, {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        })\r\n        .then(() => {\r\n          setVideoInfo(videoInfo.filter((video) => video.id !== id));\r\n        })\r\n        .catch((error) => console.error(\"Error deleting video:\", error));\r\n    }\r\n  };\r\n\r\n  const handleImportVideos = async () => {\r\n    if (!searchQuery) {\r\n      alert(\"Please enter a movie name.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=67e39655ab5c0b2be23473d483fb4af4&query=${searchQuery}`\r\n      );\r\n      const movie = response.data.results[0];\r\n      if (!movie) {\r\n        alert(\"No movie found with that name.\");\r\n        return;\r\n      }\r\n\r\n      const videoResponse = await axios.get(\r\n        `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=67e39655ab5c0b2be23473d483fb4af4`\r\n      );\r\n      setImportedVideos(videoResponse.data.results);\r\n    } catch (error) {\r\n      console.error(\"Error fetching video data from TMDb:\", error);\r\n      alert(\"Error fetching video data.\");\r\n    }\r\n  };\r\n\r\n  const handleAddImportedVideo = (video) => {\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId); // Use userId from the logged-in user\r\n    formData.append('movieId', tmdbId);\r\n    formData.append('url', `https://www.youtube.com/watch?v=${video.key}`);\r\n    formData.append('title', video.name);\r\n    formData.append('description', video.description || \"No description available\");\r\n\r\n    axios\r\n      .post('/videos', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((response) => {\r\n        setVideoInfo([...videoInfo, response.data]);\r\n        setImportedVideos([]);\r\n      })\r\n      .catch((error) => console.error(\"Error adding imported video:\", error));\r\n  };\r\n\r\n  const renderForm = () => {\r\n    const currentVideo = formState.mode === \"update\" ? formState.video : data;\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Video URL\r\n            <input type=\"text\" name=\"url\" value={currentVideo.url} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Title\r\n            <input type=\"text\" name=\"title\" value={currentVideo.title} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Description\r\n            <textarea name=\"description\" value={currentVideo.description} onChange={handleOnChange} />\r\n          </label>\r\n        </form>\r\n        <button onClick={formState.mode === \"add\" ? handleSave : handleUpdate}>\r\n          {formState.mode === \"add\" ? \"Save\" : \"Update\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setFormState({ mode: formState.mode === \"base\" ? \"add\" : \"base\", video: {} })}>\r\n        {formState.mode === \"base\" ? \"Add Video\" : \"Cancel\"}\r\n      </button>\r\n      <button onClick={handleImportVideos}>Import Videos from TMDb</button>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a movie\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n      {(formState.mode === \"add\" || formState.mode === \"update\") && renderForm()}\r\n\r\n      {importedVideos.length > 0 && (\r\n        <div>\r\n          <h2>Imported Videos:</h2>\r\n          <div>\r\n            {importedVideos.map((video) => (\r\n              <div key={video.id}>\r\n                <h3>{video.name}</h3>\r\n                <button onClick={() => handleAddImportedVideo(video)}>Add to My Videos</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        {videoInfo.map((video) => (\r\n          <div key={video.id}>\r\n            <h1>{video.title}</h1>\r\n            <p>{video.description}</p>\r\n            <button onClick={() => setFormState({ mode: \"update\", video })}>Edit</button>\r\n            <button onClick={() => handleDelete(video.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    tmdbId\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  const [formState, setFormState] = useState({\n    mode: 'base',\n    video: {}\n  });\n  const [data, setData] = useState({\n    url: '',\n    name: '',\n    site: '',\n    videoKey: '',\n    videoType: '',\n    official: 0\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [tmdbVideos, setTmdbVideos] = useState([]);\n  const accessToken = localStorage.getItem('accessToken');\n  const user = JSON.parse(localStorage.getItem('user'));\n  const apiKey = '67e39655ab5c0b2be23473d483fb4af4';\n  useEffect(() => {\n    axios.get('/videos', {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos(response.data);\n    });\n  }, [accessToken]);\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (formState.mode === 'add') {\n      setData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setFormState(prev => ({\n        ...prev,\n        video: {\n          ...prev.video,\n          [name]: value\n        }\n      }));\n    }\n  };\n  const handleSave = () => {\n    const formData = new FormData();\n    formData.append('userId', user.userId);\n    formData.append('movieId', tmdbId);\n    Object.keys(data).forEach(key => formData.append(key, data[key]));\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos([...videos, response.data]);\n      setFormState({\n        mode: 'base',\n        video: {}\n      });\n    });\n  };\n  const handleUpdate = () => {\n    const updatedVideo = formState.video;\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos(prev => prev.map(video => video.id === updatedVideo.id ? response.data : video));\n      setFormState({\n        mode: 'base',\n        video: {}\n      });\n    });\n  };\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      axios.delete(`/videos/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(() => {\n        setVideos(videos.filter(video => video.id !== id));\n      });\n    }\n  };\n  const handleSearchMovie = () => {\n    axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchQuery}`).then(response => {\n      var _response$data$result;\n      const movieId = (_response$data$result = response.data.results[0]) === null || _response$data$result === void 0 ? void 0 : _response$data$result.id;\n      if (movieId) fetchTmdbVideos(movieId);\n    }).catch(error => console.error('Error searching movie:', error));\n  };\n  const fetchTmdbVideos = movieId => {\n    axios.get(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${apiKey}`).then(response => {\n      setTmdbVideos(response.data.results);\n    }).catch(error => console.error('Error fetching videos from TMDB:', error));\n  };\n  const handleImportVideo = video => {\n    const formData = {\n      userId: user.userId,\n      movieId: tmdbId,\n      url: `https://www.youtube.com/watch?v=${video.key}`,\n      name: video.name,\n      site: video.site,\n      videoKey: video.key,\n      videoType: video.type,\n      official: video.official ? 1 : 0\n    };\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos([...videos, response.data]);\n      alert('Video imported successfully!');\n    }).catch(error => console.error('Error importing video:', error));\n  };\n  const renderForm = () => {\n    const currentVideo = formState.mode === 'update' ? formState.video : data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video URL\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            value: currentVideo.url,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: currentVideo.name,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Site\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"site\",\n            value: currentVideo.site,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoKey\",\n            value: currentVideo.videoKey,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Type\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoType\",\n            value: currentVideo.videoType,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Official\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"official\",\n            value: currentVideo.official,\n            onChange: handleOnChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 0,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: formState.mode === 'add' ? handleSave : handleUpdate,\n        children: formState.mode === 'add' ? 'Save' : 'Update'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: formState.mode === 'base' ? 'add' : 'base',\n        video: {}\n      }),\n      children: formState.mode === 'base' ? 'Add Video' : 'Cancel'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: 'import',\n        video: {}\n      }),\n      children: \"Import Videos from TMDb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), (formState.mode === 'add' || formState.mode === 'update') && renderForm(), formState.mode === 'import' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Movie\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearchMovie,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tmdb-videos\",\n        children: tmdbVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tmdb-video-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: video.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleImportVideo(video),\n            children: \"Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), videos.filter(video => video.movieId === parseInt(tmdbId)).map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: video.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.site\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.videoType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), video.url.includes('youtube') && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${video.videoKey}`,\n        title: video.name,\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        className: \"video-iframe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFormState({\n          mode: 'update',\n          video\n        }),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(video.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"D78aQVIRRNRHu3J7BlsyYEZhruc=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Videos","_s","tmdbId","videos","setVideos","formState","setFormState","mode","video","data","setData","url","name","site","videoKey","videoType","official","searchQuery","setSearchQuery","tmdbVideos","setTmdbVideos","accessToken","localStorage","getItem","user","JSON","parse","apiKey","get","headers","Authorization","then","response","handleOnChange","e","value","target","prev","handleSave","formData","FormData","append","userId","Object","keys","forEach","key","post","handleUpdate","updatedVideo","patch","id","map","handleDelete","window","confirm","delete","filter","handleSearchMovie","_response$data$result","movieId","results","fetchTmdbVideos","catch","error","console","handleImportVideo","type","alert","renderForm","currentVideo","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","className","parseInt","includes","width","height","src","title","frameBorder","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { tmdbId } = useParams();\r\n  const [videos, setVideos] = useState([]);\r\n  const [formState, setFormState] = useState({ mode: 'base', video: {} });\r\n  const [data, setData] = useState({\r\n    url: '',\r\n    name: '',\r\n    site: '',\r\n    videoKey: '',\r\n    videoType: '',\r\n    official: 0,\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [tmdbVideos, setTmdbVideos] = useState([]);\r\n\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const apiKey = '67e39655ab5c0b2be23473d483fb4af4';\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/videos', {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((response) => {\r\n        setVideos(response.data);\r\n      });\r\n  }, [accessToken]);\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (formState.mode === 'add') {\r\n      setData((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setFormState((prev) => ({\r\n        ...prev,\r\n        video: { ...prev.video, [name]: value },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId);\r\n    formData.append('movieId', tmdbId);\r\n    Object.keys(data).forEach((key) => formData.append(key, data[key]));\r\n\r\n    axios\r\n      .post('/videos', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setVideos([...videos, response.data]);\r\n        setFormState({ mode: 'base', video: {} });\r\n      });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    const updatedVideo = formState.video;\r\n    axios\r\n      .patch(`/videos/${updatedVideo.id}`, updatedVideo, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setVideos((prev) =>\r\n          prev.map((video) => (video.id === updatedVideo.id ? response.data : video))\r\n        );\r\n        setFormState({ mode: 'base', video: {} });\r\n      });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this video?')) {\r\n      axios\r\n        .delete(`/videos/${id}`, {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        })\r\n        .then(() => {\r\n          setVideos(videos.filter((video) => video.id !== id));\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSearchMovie = () => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchQuery}`)\r\n      .then((response) => {\r\n        const movieId = response.data.results[0]?.id;\r\n        if (movieId) fetchTmdbVideos(movieId);\r\n      })\r\n      .catch((error) => console.error('Error searching movie:', error));\r\n  };\r\n\r\n  const fetchTmdbVideos = (movieId) => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${apiKey}`)\r\n      .then((response) => {\r\n        setTmdbVideos(response.data.results);\r\n      })\r\n      .catch((error) => console.error('Error fetching videos from TMDB:', error));\r\n  };\r\n\r\n  const handleImportVideo = (video) => {\r\n    const formData = {\r\n      userId: user.userId,\r\n      movieId: tmdbId,\r\n      url: `https://www.youtube.com/watch?v=${video.key}`,\r\n      name: video.name,\r\n      site: video.site,\r\n      videoKey: video.key,\r\n      videoType: video.type,\r\n      official: video.official ? 1 : 0,\r\n    };\r\n\r\n    axios\r\n      .post('/videos', formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setVideos([...videos, response.data]);\r\n        alert('Video imported successfully!');\r\n      })\r\n      .catch((error) => console.error('Error importing video:', error));\r\n  };\r\n\r\n  const renderForm = () => {\r\n    const currentVideo = formState.mode === 'update' ? formState.video : data;\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Video URL\r\n            <input type=\"text\" name=\"url\" value={currentVideo.url} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Name\r\n            <input type=\"text\" name=\"name\" value={currentVideo.name} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Site\r\n            <input type=\"text\" name=\"site\" value={currentVideo.site} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Key\r\n            <input type=\"text\" name=\"videoKey\" value={currentVideo.videoKey} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Type\r\n            <input type=\"text\" name=\"videoType\" value={currentVideo.videoType} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Official\r\n            <select name=\"official\" value={currentVideo.official} onChange={handleOnChange}>\r\n              <option value={1}>Yes</option>\r\n              <option value={0}>No</option>\r\n            </select>\r\n          </label>\r\n        </form>\r\n        <button onClick={formState.mode === 'add' ? handleSave : handleUpdate}>\r\n          {formState.mode === 'add' ? 'Save' : 'Update'}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => setFormState({ mode: formState.mode === 'base' ? 'add' : 'base', video: {} })}\r\n      >\r\n        {formState.mode === 'base' ? 'Add Video' : 'Cancel'}\r\n      </button>\r\n      <button onClick={() => setFormState({ mode: 'import', video: {} })}>\r\n        Import Videos from TMDb\r\n      </button>\r\n      {(formState.mode === 'add' || formState.mode === 'update') && renderForm()}\r\n\r\n      {formState.mode === 'import' && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Movie\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n          <button onClick={handleSearchMovie}>Search</button>\r\n          <div className=\"tmdb-videos\">\r\n            {tmdbVideos.map((video) => (\r\n              <div key={video.id} className=\"tmdb-video-item\">\r\n                <h4>{video.name}</h4>\r\n                <button onClick={() => handleImportVideo(video)}>Import</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {videos\r\n        .filter((video) => video.movieId === parseInt(tmdbId))\r\n        .map((video) => (\r\n          <div key={video.id}>\r\n            <h2>{video.name}</h2>\r\n            <p>{video.site}</p>\r\n            <p>{video.videoType}</p>\r\n            {video.url.includes('youtube') && (\r\n              <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src={`https://www.youtube.com/embed/${video.videoKey}`}\r\n                title={video.name}\r\n                frameBorder=\"0\"\r\n                allowFullScreen\r\n                className=\"video-iframe\"\r\n              ></iframe>\r\n            )}\r\n            <button onClick={() => setFormState({ mode: 'update', video })}>Edit</button>\r\n            <button onClick={() => handleDelete(video.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
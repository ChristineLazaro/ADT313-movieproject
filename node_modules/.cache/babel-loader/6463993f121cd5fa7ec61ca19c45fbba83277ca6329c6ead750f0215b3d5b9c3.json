{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    tmdbId\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  const [formState, setFormState] = useState({\n    mode: 'base',\n    video: {}\n  });\n  const [data, setData] = useState({\n    url: '',\n    name: '',\n    site: '',\n    videoKey: '',\n    videoType: '',\n    official: 0\n  });\n  const [importSearchQuery, setImportSearchQuery] = useState('');\n  const [importedVideos, setImportedVideos] = useState([]);\n  const accessToken = localStorage.getItem('accessToken');\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    axios.get(`/videos`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos(response.data);\n      console.log(response.data);\n    });\n  }, [accessToken]);\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (formState.mode === 'add') {\n      setData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setFormState(prev => ({\n        ...prev,\n        video: {\n          ...prev.video,\n          [name]: value\n        }\n      }));\n    }\n  };\n  const handleSave = () => {\n    const formData = new FormData();\n    formData.append('userId', user.userId);\n    formData.append('movieId', tmdbId);\n    Object.keys(data).forEach(key => formData.append(key, data[key]));\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos([...videos, response.data]);\n      setFormState({\n        mode: 'base',\n        video: {}\n      });\n    });\n  };\n  const handleUpdate = () => {\n    const updatedVideo = formState.video;\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos(prev => prev.map(video => video.id === updatedVideo.id ? response.data : video));\n      setFormState({\n        mode: 'base',\n        video: {}\n      });\n    });\n  };\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      axios.delete(`/videos/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(() => {\n        setVideos(videos.filter(video => video.id !== id));\n      });\n    }\n  };\n  const handleImportSearch = () => {\n    const API_KEY = '67e39655ab5c0b2be23473d483fb4af4';\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${importSearchQuery}`;\n    axios.get(url).then(response => {\n      const movie = response.data.results[0]; // Taking the first result\n      if (movie) {\n        fetchVideosFromTMDb(movie.id); // Fetch videos for that movie\n      }\n    });\n  };\n  const fetchVideosFromTMDb = movieId => {\n    const API_KEY = '67e39655ab5c0b2be23473d483fb4af4';\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}`;\n    axios.get(url).then(response => {\n      setImportedVideos(response.data.results);\n    });\n  };\n  const handleAddImportedVideos = () => {\n    importedVideos.forEach(video => {\n      const formData = new FormData();\n      formData.append('userId', user.userId);\n      formData.append('movieId', tmdbId);\n      formData.append('url', video.site); // Assuming you want to save the site as url\n      formData.append('name', video.name);\n      formData.append('videoKey', video.key);\n      formData.append('videoType', video.type);\n      formData.append('official', 1); // Assuming imported videos are official\n\n      axios.post('/videos', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(response => {\n        setVideos(prevVideos => [...prevVideos, response.data]);\n      });\n    });\n  };\n  const renderForm = () => {\n    const currentVideo = formState.mode === 'update' ? formState.video : data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video URL\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            value: currentVideo.url,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: currentVideo.name,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Site\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"site\",\n            value: currentVideo.site,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoKey\",\n            value: currentVideo.videoKey,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Type\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"videoType\",\n            value: currentVideo.videoType,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Official\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"official\",\n            value: currentVideo.official,\n            onChange: handleOnChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 0,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: formState.mode === 'add' ? handleSave : handleUpdate,\n        children: formState.mode === 'add' ? 'Save' : 'Update'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: formState.mode === 'base' ? 'add' : 'base',\n        video: {}\n      }),\n      children: formState.mode === 'base' ? 'Add Video' : 'Cancel'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: 'base',\n        video: {}\n      }),\n      children: \"Import Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: importSearchQuery,\n      onChange: e => setImportSearchQuery(e.target.value),\n      placeholder: \"Search Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImportSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), importedVideos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Imported Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), importedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: video.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.site\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddImportedVideos,\n          children: \"Add to Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), (formState.mode === 'add' || formState.mode === 'update') && renderForm(), videos.filter(video => video.movieId === parseInt(tmdbId)).map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: video.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.site\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.videoType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), video.url.includes(\"youtube\") && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${video.videoKey}`,\n        title: video.name,\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        className: \"video-iframe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFormState({\n          mode: 'update',\n          video\n        }),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(video.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"n96zb6eklsLORO7lS3FZBNwDkqM=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Videos","_s","tmdbId","videos","setVideos","formState","setFormState","mode","video","data","setData","url","name","site","videoKey","videoType","official","importSearchQuery","setImportSearchQuery","importedVideos","setImportedVideos","accessToken","localStorage","getItem","user","JSON","parse","get","headers","Authorization","then","response","console","log","handleOnChange","e","value","target","prev","handleSave","formData","FormData","append","userId","Object","keys","forEach","key","post","handleUpdate","updatedVideo","patch","id","map","handleDelete","window","confirm","delete","filter","handleImportSearch","API_KEY","movie","results","fetchVideosFromTMDb","movieId","handleAddImportedVideos","type","prevVideos","renderForm","currentVideo","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","length","parseInt","includes","width","height","src","title","frameBorder","allowFullScreen","className","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { tmdbId } = useParams();\r\n  const [videos, setVideos] = useState([]);\r\n  const [formState, setFormState] = useState({ mode: 'base', video: {} });\r\n  const [data, setData] = useState({\r\n    url: '',\r\n    name: '',\r\n    site: '',\r\n    videoKey: '',\r\n    videoType: '',\r\n    official: 0,\r\n  });\r\n  const [importSearchQuery, setImportSearchQuery] = useState('');\r\n  const [importedVideos, setImportedVideos] = useState([]);\r\n\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  useEffect(() => {\r\n    axios.get(`/videos`, {\r\n      headers: { Authorization: `Bearer ${accessToken}` }\r\n    }).then(response => {\r\n      setVideos(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [accessToken]);\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (formState.mode === 'add') {\r\n      setData((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setFormState((prev) => ({\r\n        ...prev,\r\n        video: { ...prev.video, [name]: value }\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId);\r\n    formData.append('movieId', tmdbId);\r\n    Object.keys(data).forEach((key) => formData.append(key, data[key]));\r\n\r\n    axios.post('/videos', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      setVideos([...videos, response.data]);\r\n      setFormState({ mode: 'base', video: {} });\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    const updatedVideo = formState.video;\r\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      setVideos((prev) => prev.map(video => video.id === updatedVideo.id ? response.data : video));\r\n      setFormState({ mode: 'base', video: {} });\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this video?')) {\r\n      axios.delete(`/videos/${id}`, {\r\n        headers: { Authorization: `Bearer ${accessToken}` }\r\n      }).then(() => {\r\n        setVideos(videos.filter(video => video.id !== id));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImportSearch = () => {\r\n    const API_KEY = '67e39655ab5c0b2be23473d483fb4af4';\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${importSearchQuery}`;\r\n    \r\n    axios.get(url).then(response => {\r\n      const movie = response.data.results[0]; // Taking the first result\r\n      if (movie) {\r\n        fetchVideosFromTMDb(movie.id);  // Fetch videos for that movie\r\n      }\r\n    });\r\n  };\r\n\r\n  const fetchVideosFromTMDb = (movieId) => {\r\n    const API_KEY = '67e39655ab5c0b2be23473d483fb4af4';\r\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}`;\r\n    \r\n    axios.get(url).then(response => {\r\n      setImportedVideos(response.data.results);\r\n    });\r\n  };\r\n\r\n  const handleAddImportedVideos = () => {\r\n    importedVideos.forEach(video => {\r\n      const formData = new FormData();\r\n      formData.append('userId', user.userId);\r\n      formData.append('movieId', tmdbId);\r\n      formData.append('url', video.site);  // Assuming you want to save the site as url\r\n      formData.append('name', video.name);\r\n      formData.append('videoKey', video.key);\r\n      formData.append('videoType', video.type);\r\n      formData.append('official', 1);  // Assuming imported videos are official\r\n\r\n      axios.post('/videos', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${accessToken}`\r\n        }\r\n      }).then(response => {\r\n        setVideos((prevVideos) => [...prevVideos, response.data]);\r\n      });\r\n    });\r\n  };\r\n\r\n  const renderForm = () => {\r\n    const currentVideo = formState.mode === 'update' ? formState.video : data;\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Video URL\r\n            <input type=\"text\" name=\"url\" value={currentVideo.url} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Name\r\n            <input type=\"text\" name=\"name\" value={currentVideo.name} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Site\r\n            <input type=\"text\" name=\"site\" value={currentVideo.site} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Key\r\n            <input type=\"text\" name=\"videoKey\" value={currentVideo.videoKey} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Type\r\n            <input type=\"text\" name=\"videoType\" value={currentVideo.videoType} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Official\r\n            <select name=\"official\" value={currentVideo.official} onChange={handleOnChange}>\r\n              <option value={1}>Yes</option>\r\n              <option value={0}>No</option>\r\n            </select>\r\n          </label>\r\n        </form>\r\n        <button onClick={formState.mode === 'add' ? handleSave : handleUpdate}>\r\n          {formState.mode === 'add' ? 'Save' : 'Update'}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setFormState({ mode: formState.mode === 'base' ? 'add' : 'base', video: {} })}>\r\n        {formState.mode === 'base' ? 'Add Video' : 'Cancel'}\r\n      </button>\r\n      <button onClick={() => setFormState({ mode: 'base', video: {} })}>\r\n        Import Videos\r\n      </button>\r\n\r\n      {/* Import Video Section */}\r\n      <input \r\n        type=\"text\" \r\n        value={importSearchQuery} \r\n        onChange={(e) => setImportSearchQuery(e.target.value)} \r\n        placeholder=\"Search Movie\" \r\n      />\r\n      <button onClick={handleImportSearch}>Search</button>\r\n\r\n      {importedVideos.length > 0 && (\r\n        <div>\r\n          <h2>Imported Videos</h2>\r\n          {importedVideos.map((video) => (\r\n            <div key={video.id}>\r\n              <h3>{video.name}</h3>\r\n              <p>{video.site}</p>\r\n              <p>{video.type}</p>\r\n              <button onClick={handleAddImportedVideos}>Add to Movie</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Video Form Section */}\r\n      {(formState.mode === 'add' || formState.mode === 'update') && renderForm()}\r\n\r\n      {/* Display Existing Videos */}\r\n      {videos\r\n        .filter((video) => video.movieId === parseInt(tmdbId))\r\n        .map((video) => (\r\n          <div key={video.id}>\r\n            <h2>{video.name}</h2>\r\n            <p>{video.site}</p>\r\n            <p>{video.videoType}</p>\r\n\r\n            {video.url.includes(\"youtube\") && (\r\n              <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src={`https://www.youtube.com/embed/${video.videoKey}`}\r\n                title={video.name}\r\n                frameBorder=\"0\"\r\n                allowFullScreen\r\n                className=\"video-iframe\"\r\n              ></iframe>\r\n            )}\r\n\r\n            <button onClick={() => setFormState({ mode: 'update', video })}>Edit</button>\r\n            <button onClick={() => handleDelete(video.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
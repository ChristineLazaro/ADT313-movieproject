{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Videos.css'; // Create a new CSS file for video styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    tmdbId\n  } = useParams();\n  const [videoInfo, setVideoInfo] = useState([]);\n  const [formState, setFormState] = useState({\n    mode: \"base\",\n    video: {}\n  });\n  const [data, setData] = useState({\n    url: '',\n    title: '',\n    description: ''\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [importedVideos, setImportedVideos] = useState([]);\n  const accessToken = localStorage.getItem(\"accessToken\");\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    axios.get('/videos', {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideoInfo(response.data);\n    });\n  }, [accessToken]);\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (formState.mode === \"add\") {\n      setData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setFormState(prev => ({\n        ...prev,\n        video: {\n          ...prev.video,\n          [name]: value\n        }\n      }));\n    }\n  };\n  const handleSave = () => {\n    const formData = new FormData();\n    formData.append('userId', user.userId);\n    formData.append('movieId', tmdbId);\n    Object.keys(data).forEach(key => formData.append(key, data[key]));\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setVideoInfo([...videoInfo, response.data]);\n      setFormState({\n        mode: \"base\",\n        video: {}\n      });\n    });\n  };\n  const handleUpdate = () => {\n    const updatedVideo = formState.video;\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setVideoInfo(prev => prev.map(video => video.id === updatedVideo.id ? response.data : video));\n      setFormState({\n        mode: \"base\",\n        video: {}\n      });\n    });\n  };\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      axios.delete(`/videos/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      }).then(() => {\n        console.log('Database Updated');\n        setVideoInfo(videoInfo.filter(video => video.id !== id));\n      });\n    }\n  };\n  const handleImportVideos = async () => {\n    if (!searchQuery) {\n      alert(\"Please enter a movie name.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=67e39655ab5c0b2be23473d483fb4af4&query=${searchQuery}`);\n      const movie = response.data.results[0];\n      if (!movie) {\n        alert(\"No movie found with that name.\");\n        return;\n      }\n      const videoResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=67e39655ab5c0b2be23473d483fb4af4`);\n      setImportedVideos(videoResponse.data.results); // Set imported videos data\n    } catch (error) {\n      console.error(\"Error fetching video data from TMDb:\", error);\n      alert(\"Error fetching video data.\");\n    }\n  };\n  const handleAddImportedVideo = video => {\n    const formData = new FormData();\n    formData.append('userId', user.userId);\n    formData.append('movieId', tmdbId);\n    formData.append('url', `https://www.youtube.com/watch?v=${video.key}`);\n    formData.append('title', video.name);\n    formData.append('description', video.description || \"No description available\");\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setVideoInfo([...videoInfo, response.data]);\n      setImportedVideos([]); // Clear imported videos after adding\n    });\n  };\n  const renderForm = () => {\n    const currentVideo = formState.mode === \"update\" ? formState.video : data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video URL\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"videoUrl\",\n            type: \"text\",\n            name: \"url\",\n            value: currentVideo.url,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"videoTitle\",\n            type: \"text\",\n            name: \"title\",\n            value: currentVideo.title,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Video Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"videoDescription\",\n            name: \"description\",\n            value: currentVideo.description,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: formState.mode === \"add\" ? handleSave : handleUpdate,\n        children: formState.mode === \"add\" ? \"Save\" : \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-Add\",\n      onClick: () => setFormState({\n        mode: formState.mode === \"base\" ? \"add\" : \"base\",\n        video: {}\n      }),\n      children: formState.mode === \"base\" ? \"Add Video\" : \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-Import\",\n      onClick: handleImportVideos,\n      children: \"Import Videos from TMDb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a movie\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), (formState.mode === \"add\" || formState.mode === \"update\") && renderForm(), importedVideos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Imported Videos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imported-video-container\",\n        children: importedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imported-video-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: video.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: video.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddImportedVideo(video),\n            children: \"Add to My Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos-container\",\n      children: videoInfo.filter(video => video.movieId === parseInt(tmdbId)).map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"video-card-title\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-card-description\",\n          children: video.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: video.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Watch Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"video-card-edit-btn\",\n          onClick: () => setFormState({\n            mode: \"update\",\n            video\n          }),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"video-card-delete-btn\",\n          onClick: () => handleDelete(video.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"61IgPMfWFoU6mC9/Y1Dvkqnxqg0=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Videos","_s","tmdbId","videoInfo","setVideoInfo","formState","setFormState","mode","video","data","setData","url","title","description","searchQuery","setSearchQuery","importedVideos","setImportedVideos","accessToken","localStorage","getItem","user","JSON","parse","get","headers","Authorization","then","response","handleOnChange","e","name","value","target","prev","handleSave","formData","FormData","append","userId","Object","keys","forEach","key","post","console","log","handleUpdate","updatedVideo","patch","id","map","handleDelete","window","confirm","delete","filter","handleImportVideos","alert","movie","results","videoResponse","error","handleAddImportedVideo","renderForm","currentVideo","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","length","movieId","parseInt","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Videos.css';  // Create a new CSS file for video styling\r\n\r\nfunction Videos() {\r\n  const { tmdbId } = useParams();\r\n  const [videoInfo, setVideoInfo] = useState([]);\r\n  const [formState, setFormState] = useState({ mode: \"base\", video: {} });\r\n  const [data, setData] = useState({\r\n    url: '',\r\n    title: '',\r\n    description: '',\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [importedVideos, setImportedVideos] = useState([]);\r\n  const accessToken = localStorage.getItem(\"accessToken\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  useEffect(() => {\r\n    axios.get('/videos', {\r\n      headers: { Authorization: `Bearer ${accessToken}` }\r\n    }).then((response) => {\r\n      setVideoInfo(response.data);\r\n    });\r\n  }, [accessToken]);\r\n\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (formState.mode === \"add\") {\r\n      setData((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setFormState((prev) => ({\r\n        ...prev,\r\n        video: { ...prev.video, [name]: value },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId);\r\n    formData.append('movieId', tmdbId);\r\n    Object.keys(data).forEach((key) => formData.append(key, data[key]));\r\n\r\n    axios.post('/videos', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${accessToken}` }\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      setVideoInfo([...videoInfo, response.data]);\r\n      setFormState({ mode: \"base\", video: {} });\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    const updatedVideo = formState.video;\r\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\r\n      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${accessToken}` }\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      setVideoInfo((prev) => prev.map(video => video.id === updatedVideo.id ? response.data : video));\r\n      setFormState({ mode: \"base\", video: {} });\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this video?')) {\r\n      axios.delete(`/videos/${id}`, {\r\n        headers: { Authorization: `Bearer ${accessToken}` }\r\n      }).then(() => {\r\n        console.log('Database Updated');\r\n        setVideoInfo(videoInfo.filter(video => video.id !== id));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImportVideos = async () => {\r\n    if (!searchQuery) {\r\n      alert(\"Please enter a movie name.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=67e39655ab5c0b2be23473d483fb4af4&query=${searchQuery}`);\r\n      const movie = response.data.results[0];\r\n      if (!movie) {\r\n        alert(\"No movie found with that name.\");\r\n        return;\r\n      }\r\n\r\n      const videoResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=67e39655ab5c0b2be23473d483fb4af4`);\r\n      setImportedVideos(videoResponse.data.results);  // Set imported videos data\r\n    } catch (error) {\r\n      console.error(\"Error fetching video data from TMDb:\", error);\r\n      alert(\"Error fetching video data.\");\r\n    }\r\n  };\r\n\r\n  const handleAddImportedVideo = (video) => {\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId);\r\n    formData.append('movieId', tmdbId);\r\n    formData.append('url', `https://www.youtube.com/watch?v=${video.key}`);\r\n    formData.append('title', video.name);\r\n    formData.append('description', video.description || \"No description available\");\r\n\r\n    axios.post('/videos', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${accessToken}` }\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      setVideoInfo([...videoInfo, response.data]);\r\n      setImportedVideos([]);  // Clear imported videos after adding\r\n    });\r\n  };\r\n\r\n  const renderForm = () => {\r\n    const currentVideo = formState.mode === \"update\" ? formState.video : data;\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label>\r\n            Video URL\r\n            <input className=\"videoUrl\" type=\"text\" name=\"url\" value={currentVideo.url} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Title\r\n            <input className=\"videoTitle\" type=\"text\" name=\"title\" value={currentVideo.title} onChange={handleOnChange} />\r\n          </label>\r\n          <label>\r\n            Video Description\r\n            <textarea className=\"videoDescription\" name=\"description\" value={currentVideo.description} onChange={handleOnChange}></textarea>\r\n          </label>\r\n        </form>\r\n        <button onClick={formState.mode === \"add\" ? handleSave : handleUpdate}>\r\n          {formState.mode === \"add\" ? \"Save\" : \"Update\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"button-Add\" onClick={() => setFormState({ mode: formState.mode === \"base\" ? \"add\" : \"base\", video: {} })}>\r\n        {formState.mode === \"base\" ? \"Add Video\" : \"Cancel\"}\r\n      </button>\r\n      <button className=\"button-Import\" onClick={handleImportVideos}>\r\n        Import Videos from TMDb\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a movie\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n      {(formState.mode === \"add\" || formState.mode === \"update\") && renderForm()}\r\n\r\n      {importedVideos.length > 0 && (\r\n        <div>\r\n          <h2>Imported Videos:</h2>\r\n          <div className=\"imported-video-container\">\r\n            {importedVideos.map((video) => (\r\n              <div key={video.id} className=\"imported-video-card\">\r\n                <h3>{video.name}</h3>\r\n                <p>{video.description}</p>\r\n                <button onClick={() => handleAddImportedVideo(video)}>\r\n                  Add to My Videos\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"videos-container\">\r\n        {videoInfo.filter(video => video.movieId === parseInt(tmdbId)).map((video) => (\r\n          <div key={video.id} className=\"video-card\">\r\n            <h1 className=\"video-card-title\">{video.title}</h1>\r\n            <p className=\"video-card-description\">{video.description}</p>\r\n            <a href={video.url} target=\"_blank\" rel=\"noopener noreferrer\">Watch Video</a>\r\n            <button className=\"video-card-edit-btn\" onClick={() => setFormState({ mode: \"update\", video })}>Edit</button>\r\n            <button className=\"video-card-delete-btn\" onClick={() => handleDelete(video.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
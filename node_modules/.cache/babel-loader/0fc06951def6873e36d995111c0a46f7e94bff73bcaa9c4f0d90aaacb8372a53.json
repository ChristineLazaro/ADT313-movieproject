{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Casts\\\\Casts.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Casts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Casts = () => {\n  _s();\n  const [castList, setCastList] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchedMovieId, setSearchedMovieId] = useState(null);\n  const {\n    movieId\n  } = useParams();\n\n  // Fetch cast based on the movieId from the URL\n  useEffect(() => {\n    if (movieId) {\n      axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw'\n        }\n      }).then(response => {\n        setCastList(response.data.cast);\n      }).catch(error => {\n        console.error('Error fetching cast data:', error);\n        alert('An error occurred while fetching the cast data.');\n      });\n    }\n  }, [movieId]);\n\n  // Fetch movie id based on the search query and then fetch the cast\n  const handleSearch = () => {\n    if (searchQuery) {\n      axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&language=en-US`,\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw'\n        }\n      }).then(response => {\n        const movie = response.data.results[0];\n        if (movie) {\n          setSearchedMovieId(movie.id);\n          fetchCastForSearchedMovie(movie.id);\n        } else {\n          alert('Movie not found');\n        }\n      }).catch(error => {\n        console.error('Error searching movie:', error);\n        alert('An error occurred while searching for the movie.');\n      });\n    }\n  };\n\n  // Fetch the cast of the movie based on the movie id\n  const fetchCastForSearchedMovie = id => {\n    axios({\n      method: 'get',\n      url: `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw'\n      }\n    }).then(response => {\n      setCastList(response.data.cast);\n    }).catch(error => {\n      console.error('Error fetching cast data:', error);\n      alert('An error occurred while fetching the cast data.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cast-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cast List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchCastForSearchedMovie(movieId),\n      children: \"Add Cast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a movie\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Import Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), castList.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cast-list\",\n      children: castList.map(cast => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cast-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200${cast.profile_path}`,\n          alt: cast.name,\n          onError: e => e.target.src = '/default-profile.png'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 20\n            }, this), \" \", cast.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Character:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 20\n            }, this), \" \", cast.character]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, cast.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cast information available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Casts, \"J+bXGgkRIyifeKGdGnBx3cqvjSM=\", false, function () {\n  return [useParams];\n});\n_c = Casts;\nexport default Casts;\nvar _c;\n$RefreshReg$(_c, \"Casts\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","jsxDEV","_jsxDEV","Casts","_s","castList","setCastList","searchQuery","setSearchQuery","searchedMovieId","setSearchedMovieId","movieId","method","url","headers","Accept","Authorization","then","response","data","cast","catch","error","console","alert","handleSearch","movie","results","id","fetchCastForSearchedMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","length","map","src","profile_path","alt","name","onError","character","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Casts/Casts.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Casts.css';\r\n\r\nconst Casts = () => {\r\n  const [castList, setCastList] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchedMovieId, setSearchedMovieId] = useState(null);\r\n  const { movieId } = useParams();\r\n\r\n  // Fetch cast based on the movieId from the URL\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      axios({\r\n        method: 'get',\r\n        url: `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\r\n        headers: {\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw',\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setCastList(response.data.cast);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching cast data:', error);\r\n          alert('An error occurred while fetching the cast data.');\r\n        });\r\n    }\r\n  }, [movieId]);\r\n\r\n  // Fetch movie id based on the search query and then fetch the cast\r\n  const handleSearch = () => {\r\n    if (searchQuery) {\r\n      axios({\r\n        method: 'get',\r\n        url: `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&language=en-US`,\r\n        headers: {\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw',\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const movie = response.data.results[0];\r\n          if (movie) {\r\n            setSearchedMovieId(movie.id);\r\n            fetchCastForSearchedMovie(movie.id);\r\n          } else {\r\n            alert('Movie not found');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error searching movie:', error);\r\n          alert('An error occurred while searching for the movie.');\r\n        });\r\n    }\r\n  };\r\n\r\n  // Fetch the cast of the movie based on the movie id\r\n  const fetchCastForSearchedMovie = (id) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2UzOTY1NWFiNWMwYjJiZTIzNDczZDQ4M2ZiNGFmNCIsIm5iZiI6MTczMzMzMTE0My40OTEwMDAyLCJzdWIiOiI2NzUwODhjNzY1NjcwMmE3OTJmZmJmM2QiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.-Y-hBxsQ3ycAuRywWOvxhas_-s12qYssYvFgJy47sMw',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setCastList(response.data.cast);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching cast data:', error);\r\n        alert('An error occurred while fetching the cast data.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cast-container\">\r\n      <h2>Cast List</h2>\r\n\r\n      {/* Add Cast Button */}\r\n      <button onClick={() => fetchCastForSearchedMovie(movieId)}>\r\n        Add Cast\r\n      </button>\r\n\r\n      {/* Import Cast Button */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Import Cast</button>\r\n      </div>\r\n\r\n      {castList.length > 0 ? (\r\n        <ul className=\"cast-list\">\r\n          {castList.map((cast) => (\r\n            <li key={cast.id} className=\"cast-item\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\r\n                alt={cast.name}\r\n                onError={(e) => (e.target.src = '/default-profile.png')}\r\n              />\r\n              <div className=\"cast-info\">\r\n                <p><strong>Name:</strong> {cast.name}</p>\r\n                <p><strong>Character:</strong> {cast.character}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No cast information available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Casts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\christine\\\\ADT313-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    tmdbId\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  const [formState, setFormState] = useState({\n    mode: 'base',\n    video: {}\n  });\n  const [data, setData] = useState({\n    url: '',\n    name: '',\n    site: '',\n    videoKey: '',\n    videoType: '',\n    official: 0\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [importedVideos, setImportedVideos] = useState([]);\n  const [popupMessage, setPopupMessage] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [loading, setLoading] = useState(false); // Track loading state\n\n  const accessToken = localStorage.getItem('accessToken');\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    axios.get('/videos', {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos(response.data);\n    }).catch(error => {\n      console.error('Error fetching videos:', error);\n    });\n  }, [accessToken]);\n\n  // Handle the change in form fields\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (formState.mode === 'add') {\n      setData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setFormState(prev => ({\n        ...prev,\n        video: {\n          ...prev.video,\n          [name]: value\n        }\n      }));\n    }\n  };\n\n  // Show popup message\n  const showPopUpMessage = message => {\n    setPopupMessage(message);\n    setShowPopup(true);\n    setTimeout(() => {\n      setShowPopup(false);\n    }, 3000);\n  };\n\n  // Save video to database\n  const handleSave = () => {\n    setLoading(true); // Show loading state\n    const formData = new FormData();\n    formData.append('userId', user.userId);\n    formData.append('movieId', tmdbId);\n    Object.keys(data).forEach(key => formData.append(key, data[key]));\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos([...videos, response.data]);\n      setFormState({\n        mode: 'base',\n        video: {}\n      });\n      showPopUpMessage('Video saved successfully!');\n      setLoading(false); // Hide loading state\n    }).catch(error => {\n      console.error('Error saving video:', error);\n      showPopUpMessage('Error saving video!');\n      setLoading(false); // Hide loading state\n    });\n  };\n\n  // Update video\n  const handleUpdate = () => {\n    setLoading(true); // Show loading state\n    const updatedVideo = formState.video;\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos(prev => prev.map(video => video.id === updatedVideo.id ? response.data : video));\n      setFormState({\n        mode: 'base',\n        video: {}\n      });\n      showPopUpMessage('Video updated successfully!');\n      setLoading(false); // Hide loading state\n    }).catch(error => {\n      console.error('Error updating video:', error);\n      showPopUpMessage('Error updating video!');\n      setLoading(false); // Hide loading state\n    });\n  };\n\n  // Save imported video to the database\n  const handleSaveImportedVideos = video => {\n    setLoading(true); // Show loading state\n    const formData = new FormData();\n    formData.append('userId', user.userId);\n    formData.append('movieId', tmdbId);\n    formData.append('url', video.site);\n    formData.append('name', video.name);\n    formData.append('videoKey', video.key);\n    formData.append('videoType', video.type);\n    formData.append('official', video.official ? 1 : 0);\n    axios.post('/videos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setVideos([...videos, response.data]);\n      showPopUpMessage('Imported video added successfully!');\n      setLoading(false); // Hide loading state\n    }).catch(error => {\n      console.error('Error saving imported video:', error);\n      showPopUpMessage('Error adding imported video!');\n      setLoading(false); // Hide loading state\n    });\n  };\n\n  // Search videos from TMDb\n  const handleSearch = () => {\n    if (!searchQuery) return; // Skip if search query is empty\n    const apiKey = '67e39655ab5c0b2be23473d483fb4af4'; // TMDb API Key\n    const url = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=${apiKey}`;\n    axios.get(url).then(response => {\n      var _response$data$result;\n      const movieId = (_response$data$result = response.data.results[0]) === null || _response$data$result === void 0 ? void 0 : _response$data$result.id;\n      if (movieId) {\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${apiKey}`).then(videoResponse => {\n          setImportedVideos(videoResponse.data.results);\n        }).catch(error => {\n          console.error('Error fetching imported videos:', error);\n        });\n      }\n    }).catch(error => {\n      console.error('Error searching for movie:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: formState.mode === 'base' ? 'add' : 'base',\n        video: {}\n      }),\n      children: formState.mode === 'base' ? 'Add Video' : 'Cancel'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormState({\n        mode: 'base'\n      }),\n      children: \"Import Videos from TMDb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a movie\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: importedVideos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Imported Videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), importedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: video.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), video.site === 'YouTube' && /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            height: \"315\",\n            src: `https://www.youtube.com/embed/${video.key}`,\n            title: video.name,\n            frameBorder: \"0\",\n            allowFullScreen: true,\n            className: \"video-iframe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveImportedVideos(video),\n            children: \"Add to Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), (formState.mode === 'add' || formState.mode === 'update') && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: formState.mode === 'add' ? handleSave : handleUpdate,\n        disabled: loading,\n        children: loading ? 'Saving...' : formState.mode === 'add' ? 'Save' : 'Update'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), videos.filter(video => video.movieId === parseInt(tmdbId)).map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: video.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.site\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.videoType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), video.url.includes(\"youtube\") && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${video.videoKey}`,\n        title: video.name,\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        className: \"video-iframe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFormState({\n          mode: 'update',\n          video\n        }),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(video.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"E8FGIkmPTekVI1s9Oi0DxqFBENw=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Videos","_s","tmdbId","videos","setVideos","formState","setFormState","mode","video","data","setData","url","name","site","videoKey","videoType","official","searchQuery","setSearchQuery","importedVideos","setImportedVideos","popupMessage","setPopupMessage","showPopup","setShowPopup","loading","setLoading","accessToken","localStorage","getItem","user","JSON","parse","get","headers","Authorization","then","response","catch","error","console","handleOnChange","e","value","target","prev","showPopUpMessage","message","setTimeout","handleSave","formData","FormData","append","userId","Object","keys","forEach","key","post","handleUpdate","updatedVideo","patch","id","map","handleSaveImportedVideos","type","handleSearch","apiKey","_response$data$result","movieId","results","videoResponse","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","length","width","height","src","title","frameBorder","allowFullScreen","disabled","filter","parseInt","includes","handleDelete","_c","$RefreshReg$"],"sources":["C:/Users/christine/ADT313-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { tmdbId } = useParams();\r\n  const [videos, setVideos] = useState([]);\r\n  const [formState, setFormState] = useState({ mode: 'base', video: {} });\r\n  const [data, setData] = useState({\r\n    url: '',\r\n    name: '',\r\n    site: '',\r\n    videoKey: '',\r\n    videoType: '',\r\n    official: 0,\r\n  });\r\n\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [importedVideos, setImportedVideos] = useState([]);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [loading, setLoading] = useState(false);  // Track loading state\r\n\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  useEffect(() => {\r\n    axios.get('/videos', {\r\n      headers: { Authorization: `Bearer ${accessToken}` }\r\n    }).then(response => {\r\n      setVideos(response.data);\r\n    }).catch(error => {\r\n      console.error('Error fetching videos:', error);\r\n    });\r\n  }, [accessToken]);\r\n\r\n  // Handle the change in form fields\r\n  const handleOnChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (formState.mode === 'add') {\r\n      setData((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setFormState((prev) => ({\r\n        ...prev,\r\n        video: { ...prev.video, [name]: value }\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Show popup message\r\n  const showPopUpMessage = (message) => {\r\n    setPopupMessage(message);\r\n    setShowPopup(true);\r\n    setTimeout(() => {\r\n      setShowPopup(false);\r\n    }, 3000);\r\n  };\r\n\r\n  // Save video to database\r\n  const handleSave = () => {\r\n    setLoading(true);  // Show loading state\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId);\r\n    formData.append('movieId', tmdbId);\r\n    Object.keys(data).forEach((key) => formData.append(key, data[key]));\r\n\r\n    axios.post('/videos', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      setVideos([...videos, response.data]);\r\n      setFormState({ mode: 'base', video: {} });\r\n      showPopUpMessage('Video saved successfully!');\r\n      setLoading(false);  // Hide loading state\r\n    }).catch(error => {\r\n      console.error('Error saving video:', error);\r\n      showPopUpMessage('Error saving video!');\r\n      setLoading(false);  // Hide loading state\r\n    });\r\n  };\r\n\r\n  // Update video\r\n  const handleUpdate = () => {\r\n    setLoading(true);  // Show loading state\r\n    const updatedVideo = formState.video;\r\n    axios.patch(`/videos/${updatedVideo.id}`, updatedVideo, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      setVideos((prev) => prev.map(video => video.id === updatedVideo.id ? response.data : video));\r\n      setFormState({ mode: 'base', video: {} });\r\n      showPopUpMessage('Video updated successfully!');\r\n      setLoading(false);  // Hide loading state\r\n    }).catch(error => {\r\n      console.error('Error updating video:', error);\r\n      showPopUpMessage('Error updating video!');\r\n      setLoading(false);  // Hide loading state\r\n    });\r\n  };\r\n\r\n  // Save imported video to the database\r\n  const handleSaveImportedVideos = (video) => {\r\n    setLoading(true);  // Show loading state\r\n    const formData = new FormData();\r\n    formData.append('userId', user.userId);\r\n    formData.append('movieId', tmdbId);\r\n    formData.append('url', video.site);\r\n    formData.append('name', video.name);\r\n    formData.append('videoKey', video.key);\r\n    formData.append('videoType', video.type);\r\n    formData.append('official', video.official ? 1 : 0);\r\n\r\n    axios.post('/videos', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      setVideos([...videos, response.data]);\r\n      showPopUpMessage('Imported video added successfully!');\r\n      setLoading(false);  // Hide loading state\r\n    }).catch(error => {\r\n      console.error('Error saving imported video:', error);\r\n      showPopUpMessage('Error adding imported video!');\r\n      setLoading(false);  // Hide loading state\r\n    });\r\n  };\r\n\r\n  // Search videos from TMDb\r\n  const handleSearch = () => {\r\n    if (!searchQuery) return; // Skip if search query is empty\r\n    const apiKey = '67e39655ab5c0b2be23473d483fb4af4'; // TMDb API Key\r\n    const url = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=${apiKey}`;\r\n\r\n    axios.get(url).then((response) => {\r\n      const movieId = response.data.results[0]?.id;\r\n      if (movieId) {\r\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${apiKey}`).then((videoResponse) => {\r\n          setImportedVideos(videoResponse.data.results);\r\n        }).catch((error) => {\r\n          console.error('Error fetching imported videos:', error);\r\n        });\r\n      }\r\n    }).catch((error) => {\r\n      console.error('Error searching for movie:', error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showPopup && <div className=\"popup\">{popupMessage}</div>} {/* Display Pop-up Message */}\r\n\r\n      <button onClick={() => setFormState({ mode: formState.mode === 'base' ? 'add' : 'base', video: {} })}>\r\n        {formState.mode === 'base' ? 'Add Video' : 'Cancel'}\r\n      </button>\r\n\r\n      {/* Import Videos Button */}\r\n      <button onClick={() => setFormState({ mode: 'base' })}>\r\n        Import Videos from TMDb\r\n      </button>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a movie\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n\r\n      {/* Display imported videos */}\r\n      <div>\r\n        {importedVideos.length > 0 && (\r\n          <div>\r\n            <h2>Imported Videos</h2>\r\n            {importedVideos.map((video) => (\r\n              <div key={video.id}>\r\n                <h3>{video.name}</h3>\r\n                {video.site === 'YouTube' && (\r\n                  <iframe\r\n                    width=\"560\"\r\n                    height=\"315\"\r\n                    src={`https://www.youtube.com/embed/${video.key}`}\r\n                    title={video.name}\r\n                    frameBorder=\"0\"\r\n                    allowFullScreen\r\n                    className=\"video-iframe\"\r\n                  ></iframe>\r\n                )}\r\n                <button onClick={() => handleSaveImportedVideos(video)}>\r\n                  Add to Movie\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {(formState.mode === 'add' || formState.mode === 'update') && (\r\n        <div>\r\n          <form>\r\n            {/* Form fields for video data */}\r\n          </form>\r\n          <button onClick={formState.mode === 'add' ? handleSave : handleUpdate} disabled={loading}>\r\n            {loading ? 'Saving...' : formState.mode === 'add' ? 'Save' : 'Update'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {videos.filter((video) => video.movieId === parseInt(tmdbId)).map((video) => (\r\n        <div key={video.id}>\r\n          <h2>{video.name}</h2>\r\n          <p>{video.site}</p>\r\n          <p>{video.videoType}</p>\r\n\r\n          {video.url.includes(\"youtube\") && (\r\n            <iframe\r\n              width=\"560\"\r\n              height=\"315\"\r\n              src={`https://www.youtube.com/embed/${video.videoKey}`}\r\n              title={video.name}\r\n              frameBorder=\"0\"\r\n              allowFullScreen\r\n              className=\"video-iframe\"\r\n            ></iframe>\r\n          )}\r\n\r\n          <button onClick={() => setFormState({ mode: 'update', video })}>Update</button>\r\n          <button onClick={() => handleDelete(video.id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}